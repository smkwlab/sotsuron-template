name: Auto Final Merge
on:
  push:
    tags:
      - 'final-*'

jobs:
  auto-merge-to-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Find approved PR for this branch
        id: find-pr
        run: |
          # „Çø„Ç∞„Åå‰ªò„ÅÑ„Åü„Éñ„É©„É≥„ÉÅ„ÇíÁâπÂÆö
          TAG_COMMIT=$(git rev-parse HEAD)
          BRANCH_NAME=$(git branch -r --contains $TAG_COMMIT | grep -v HEAD | head -1 | sed 's/origin\///' | xargs)
          
          if [ -z "$BRANCH_NAME" ]; then
            echo "‚ùå Cannot determine branch for this tag"
            exit 1
          fi
          
          echo "üîç Checking for approved PR from branch: $BRANCH_NAME"
          
          # „Åù„ÅÆ„Éñ„É©„É≥„ÉÅ„Åã„Çâ main „Å∏„ÅÆÊâøË™çÊ∏à„ÅøPR„ÇíÊ§úÁ¥¢
          PR_NUMBER=$(gh pr list --state open --base main --head "$BRANCH_NAME" --json number,reviews --jq '.[] | select(.reviews | map(.state) | contains(["APPROVED"])) | .number')
          
          if [ -n "$PR_NUMBER" ]; then
            echo "approved_pr=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "‚úÖ Found approved PR #$PR_NUMBER from branch $BRANCH_NAME"
          else
            echo "‚ùå No approved PR found for branch $BRANCH_NAME"
            echo "Please ensure:"
            echo "1. PR from $BRANCH_NAME to main exists"
            echo "2. PR has been approved by faculty"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Auto merge approved PR
        run: |
          PR_NUMBER=${{ steps.find-pr.outputs.approved_pr }}
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # PR„ÇíËá™Âãï„Éû„Éº„Ç∏
          gh pr merge $PR_NUMBER --merge --delete-branch
          
          echo "‚úÖ Automatically merged PR #$PR_NUMBER to main"
          echo "üéì Final submission complete with tag: $TAG_NAME"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create release
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          gh release create $TAG_NAME --title "Final Submission: $TAG_NAME" --notes "üéì Automatically created for final submission

Tag: \`$TAG_NAME\`
Date: $(date)
Status: Merged to main branch

This release represents the final submitted version of the thesis." --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}